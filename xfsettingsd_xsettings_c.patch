Fix recursive lock in libX11

Index: xfsettingsd/xsettings.c
--- xfsettingsd/xsettings.c.orig
+++ xfsettingsd/xsettings.c
@@ -144,6 +144,12 @@ struct _XfceXSettingsScreen
     gint     screen_num;
 };
 
+struct _XfceTimestamp
+{
+    Window window;
+    Atom   atom;
+};
+  
 
 
 G_DEFINE_TYPE (XfceXSettingsHelper, xfce_xsettings_helper, G_TYPE_OBJECT);
@@ -1033,11 +1039,11 @@ xfce_xsettings_helper_timestamp_predicate (Display  *x
                                            XEvent   *xevent,
                                            XPointer  arg)
 {
-    Window window = GPOINTER_TO_UINT (arg);
+    struct _XfceTimestamp *ts = (struct _XfceTimestamp *)arg;
 
     return (xevent->type == PropertyNotify
-            && xevent->xproperty.window == window
-            && xevent->xproperty.atom == XInternAtom (xdisplay, "_TIMESTAMP_PROP", False));
+            && xevent->xproperty.window == ts->window
+            && xevent->xproperty.atom == ts->atom);
 }
 
 
@@ -1046,17 +1052,18 @@ Time
 xfce_xsettings_get_server_time (Display *xdisplay,
                                 Window   window)
 {
-    Atom   timestamp_atom;
+    struct _XfceTimestamp *ts = g_malloc(sizeof(struct _XfceTimestamp));
     guchar c = 'a';
     XEvent xevent;
 
     /* get the current xserver timestamp */
-    timestamp_atom = XInternAtom (xdisplay, "_TIMESTAMP_PROP", False);
-    XChangeProperty (xdisplay, window, timestamp_atom, timestamp_atom,
+    ts->atom = XInternAtom (xdisplay, "_TIMESTAMP_PROP", False);
+    ts->window = window;
+    XChangeProperty (xdisplay, window, ts->atom, ts->atom,
                      8, PropModeReplace, &c, 1);
     XIfEvent (xdisplay, &xevent, xfce_xsettings_helper_timestamp_predicate,
-              GUINT_TO_POINTER (window));
-
+              (XPointer)ts);
+    g_free(ts);
     return xevent.xproperty.time;
 }
 
